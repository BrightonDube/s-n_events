# This is the name of our workflow. It will show up in the "Actions" tab on GitHub.
name: Deploy Website to cPanel

# This section defines when the workflow should run.
on:
  # We want it to run every time we push code...
  push:
    # ...but only when we push to the "main" branch. You can change this to "master" if you use that.
    branches: [ "main" ]
    # This adds the manual "Run workflow" button in the GitHub Actions UI.
  workflow_dispatch:
    

# This section defines the actual work to be done.
jobs:
  # We'll have a single job called "deploy"
  deploy:
    # The job will run on a fresh, virtual computer provided by GitHub (Ubuntu is a good choice)
    runs-on: ubuntu-latest
    
    # These are the individual steps the job will take
    steps:
      # Step 1: Check out a copy of your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the project
      - name: Build project
        run: npm run build

      # Step 5: Deploy built files via SFTP
      - name: SFTP Deploy
        uses: easingthemes/ssh-deploy@v5.0.3
        with:
          # SSH connection details from secrets
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          REMOTE_PORT: ${{ secrets.SSH_PORT || 22 }}
          # Upload the built files from the dist directory
          SOURCE: dist/
          TARGET: ${{ secrets.SSH_TARGET_DIR }}
          # Exclude unnecessary files
          EXCLUDE: "/dist/, /node_modules/, /.git/, /.github/"
          # Script to run after upload (optional)
          SCRIPT_AFTER: |
            echo "Deployment completed successfully!"
            ls -la ${{ secrets.SSH_TARGET_DIR }}